module pipeline_adder_4bit_tb();

    reg [3:0] A, B;
    reg C_in, clk;
    wire [3:0] S;
    wire C_out;

    pipeline_adder_4bit dut(
        .A(A),
        .B(B),
        .C_in(C_in),
        .S(S),
        .C_out(C_out),
        .clk(clk)
    );

    initial begin
        $dumpfile("pipeline_adder_4bit_tb.v");
        $dumpvars(0, pipeline_adder_4bit_tb);

        A = 4'b0000;
        B = 4'b0000;
        C_in = 1'b0;
        clk = 1'b0;

        #5;
        A = 4'b0001;
        B = 4'b0001;

        #5;
        C_in = 1'b0;
        clk = 1'b1;

        #5;
        A = 4'b0010;
        B = 4'b0101;

        #5;
        C_in = 1'b0;
        clk = 1'b0;

        #5;
        A = 4'b0111;
        B = 4'b0001;

        #5;
        C_in = 1'b1;
        clk = 1'b1;

        #5;
        A = 4'b1111;
        B = 4'b0001;

        #5;
        C_in = 1'b1;
        clk = 1'b0;

        #5;
        $finish;
    end

    always #1 clk = ~clk;

endmodule